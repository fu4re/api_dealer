version: '3.7'
services:
  consumer:
    build:
      context: ./consumer
      target: production
    tty: true
    stdin_open: true
    command: ruby boot.rb
    env_file: .env.development
    entrypoint: sh bunny_waiter.sh

  backend: &app
    build:
      context: ./backend
      target: production
    tty: true
    stdin_open: true
    env_file: .env.development
    ports:
      - "3000:3000"
      - "9293:9293"
    depends_on:
      - db
    volumes:
      - recognition:/opt/app/pasports

  recognition:
   build:
      context: ./identity-recognition
   command: python3 main.py -l 0.0.0.0 -p 5678
   tty: true
   stdin_open: true
   ports:
    - "5678:5678"
   volumes:
     - recognition:/opt/app/pasports
   depends_on:
     - consumer

  # nginx:
  #   build:
  #     context: ./frontend
  #     target: production
  #   volumes:
  #     - storage:/app/storage
  #   env_file: .env.development
  #   depends_on:
  #     - backend
  #   ports:
  #     - 80:80

  mockserver:
    image: mockserver/mockserver:latest
    command: -logLevel OFF -serverPort 1090
    restart: always
    ports:
      - 1080:1090
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
    volumes:
      - type: bind
        source: ./mockserver
        target: /config

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    ports:
      - 15672:15672
      - 5672:5672

  redis:
    image: redis:7.0.5-alpine3.16
    command: ["redis-server"]
    env_file: .env.development
    volumes:
      - redis:/data
    depends_on:
        - consumer

  db:
    image: postgres:13.3-alpine
    env_file: .env.development
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  redis:
  postgres:
  storage:
  recognition:
